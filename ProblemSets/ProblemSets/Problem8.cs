using System;
using System.Linq;

namespace ProblemSets
{
	public class Problem8
	{
		public static void Solve()
		{
			const string digit = @"
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450";

			var dig = digit.Replace("\r", "").Replace("\n", "");

			var max = 0;
			for (var i = 0; i < dig.Length - 5; i++)
			{
				var arr = dig[i].ToString() + dig[i + 1] + dig[i + 2] + dig[i + 3] + dig[i + 4];
				if (arr.Contains("0")) continue;
				var mul = arr.Select(c => c - 48).Aggregate(1, (s, c) => s * c);

				if (mul > max)
					max = mul;
			}
			Console.WriteLine(max);
		}

		const string digit2 = @"
7...7.7..........9.9.....9.7.....7.7.......9.9.9..
9.98.......77.........9.78..8...98.8..8.9.788..8..
8.8.....789...9.9.9...9...7.79.8...9..8....88.....
......987.7..8...8.....7...9..9.9...9...7........7
..89...89..............7..8......987.....7...8....
....989.....8...8.......7.....8.8......8......87.9
....89.7.9..9..9.......77..9.7..8.....8.9..79..8..
7..7...7...88.9987979.879..7.9..9...997..888.9.77.
..7.7...........788..........8.97.........9.7.....
...8.9.77...7..........8.9.8....7........7......97
...978.79778...7....9....9.9.8....9...978..8....8.
8.97.....7...7.....7.9......797.9.8.............7.
8.....7..8.....9989...889.........8.....7.88...88.
....7.7..799.....9.8...8......7.8..9.9......8...8.
.78....8..9........9.7.....8.8.89..88......7.9....
....9....7...............9.7......7...9....89....8
.7.98...8..9...........98....9878799.7....8.9.9.88
8..8........979.9...87..99..........899.....7.7...
..88......7..9....77.........98..........9..7.97..
7......9...88..7...8....8....8....7......7..9.....";
	}
}